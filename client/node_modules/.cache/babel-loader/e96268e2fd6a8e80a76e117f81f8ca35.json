{"ast":null,"code":"var _jsxFileName = \"F:\\\\mern-stack-example-main\\\\mern\\\\client\\\\src\\\\components\\\\edit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Edit() {\n  _s();\n\n  const [form, setForm] = useState({\n    name: \"\",\n    op1: \"\",\n    op2: \"\",\n    op3: \"\"\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:5000/record/${params.id.toString()}`);\n\n      if (!response.ok) {\n        const message = `An error has occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const record = await response.json();\n\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n\n      setForm(record);\n    }\n\n    fetchData();\n    return;\n  }, [params.id, navigate]); // These methods will update the state properties.\n\n  function updateForm(value) {\n    return setForm(prev => {\n      return { ...prev,\n        ...value\n      };\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    const editedPerson = {\n      name: form.name,\n      op1: form.op1,\n      op2: form.op2,\n      op3: form.op3\n    }; // This will send a post request to update the data in the database.\n\n    await fetch(`http://localhost:5000/update/${params.id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedPerson),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    navigate(\"/\");\n  } // This following section will display the form that takes input from the user to update the data.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Update Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Question: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          value: form.name,\n          onChange: e => updateForm({\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"op1\",\n          children: \"Option 1: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"op1\",\n          value: form.op1,\n          onChange: e => updateForm({\n            op1: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"op2\",\n          children: \"Option 2: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"op2\",\n          value: form.op2,\n          onChange: e => updateForm({\n            op2: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"op3\",\n          children: \"Option 3: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"op3\",\n          value: form.op3,\n          onChange: e => updateForm({\n            op3: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Update Question\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Edit, \"1CRM8n4MuThDKZ+2snicKqnzamI=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["F:/mern-stack-example-main/mern/client/src/components/edit.js"],"names":["React","useState","useEffect","useParams","useNavigate","Edit","form","setForm","name","op1","op2","op3","params","navigate","fetchData","id","toString","response","fetch","ok","message","statusText","window","alert","record","json","updateForm","value","prev","onSubmit","e","preventDefault","editedPerson","method","body","JSON","stringify","headers","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\n\nexport default function Edit() {\n  const [form, setForm] = useState({\n    name: \"\",\n    op1: \"\",\n    op2: \"\",\n    op3: \"\"\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:5000/record/${params.id.toString()}`);\n\n      if (!response.ok) {\n        const message = `An error has occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const record = await response.json();\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n\n      setForm(record);\n    }\n\n    fetchData();\n\n    return;\n  }, [params.id, navigate]);\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    const editedPerson = {\n      name: form.name,\n      op1: form.op1,\n      op2: form.op2,\n      op3: form.op3,\n    };\n\n    // This will send a post request to update the data in the database.\n    await fetch(`http://localhost:5000/update/${params.id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedPerson),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    });\n\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes input from the user to update the data.\n  return (\n    <div>\n      <h3>Update Question</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Question: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            value={form.name}\n            onChange={(e) => updateForm({ name: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"op1\">Option 1: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"op1\"\n            value={form.op1}\n            onChange={(e) => updateForm({ op1: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"op2\">Option 2: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"op2\"\n            value={form.op2}\n            onChange={(e) => updateForm({ op2: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"op3\">Option 3: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"op3\"\n            value={form.op3}\n            onChange={(e) => updateForm({ op3: e.target.value })}\n          />\n        </div>\n        <br />\n\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Update Question\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}